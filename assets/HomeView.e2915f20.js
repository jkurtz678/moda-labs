import{d as T,u as N,a as L,c as S,r as c,o as i,b as y,e as s,f as E,g as $,F as P,h as r,w as u,t as z,i as M,j as R,_ as H,k as U,l as F,E as G,R as I}from"./index.13f8a161.js";import{u as A,s as _}from"./account.099c3b87.js";import{u as K}from"./breakpoints.2a1a5c1f.js";import{u as O,a as j}from"./plaque.30f48318.js";import{u as W}from"./token-meta.d5606bce.js";import{u as J}from"./plaque.cc3b0edd.js";var Q=`@import"https://fonts.googleapis.com/css2?family=K2D&display=swap";:root{--vt-c-white: #ffffff;--vt-c-white-soft: #f8f8f8;--vt-c-white-mute: #f2f2f2;--vt-c-black: #181818;--vt-c-black-soft: #222222;--vt-c-black-mute: #282828;--vt-c-indigo: #2c3e50;--vt-c-divider-light-1: rgba(60, 60, 60, .29);--vt-c-divider-light-2: rgba(60, 60, 60, .12);--vt-c-divider-dark-1: rgba(84, 84, 84, .65);--vt-c-divider-dark-2: rgba(84, 84, 84, .48);--vt-c-text-light-1: var(--vt-c-indigo);--vt-c-text-light-2: rgba(60, 60, 60, .66);--vt-c-text-dark-1: var(--vt-c-white);--vt-c-text-dark-2: rgba(235, 235, 235, .64)}:root{--color-background: var(--vt-c-white);--color-background-soft: var(--vt-c-white-soft);--color-background-mute: var(--vt-c-white-mute);--color-border: var(--vt-c-divider-light-2);--color-border-hover: var(--vt-c-divider-light-1);--color-heading: var(--vt-c-text-light-1);--color-text: var(--vt-c-text-light-1);--section-gap: 160px}*,*:before,*:after{box-sizing:border-box;margin:0;position:relative;font-weight:400}html{height:100%}body{min-height:100vh;color:var(--color-text);background:var(--color-background);transition:color .5s,background-color .5s;line-height:1.6;font-family:K2D,sans-serif;font-size:15px;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}hr{border:.1px solid lightgray}
`,X="/assets/logo.61e654f6.png",Y="/assets/logo.da9b9095.svg",Z="/assets/search-icon.38a117a4.svg";const ee={style:{display:"flex","align-items":"center"}},te=M("div",{style:{"flex-grow":"1"}},null,-1),oe=R(" Cancel "),ae=M("div",{style:{"flex-grow":"1"}},null,-1),se={key:0,style:{"margin-right":"10px"}},re=R("Logout"),ne=T({__name:"Header",setup(B){const o=N(),g=L(),n=A(),{width:D,screen_type:v}=K(),f=(e,t)=>{e.paneName&&typeof e.paneName=="string"&&o.push({name:e.paneName})},w=S(()=>{const e=n.account;if(!e)return"";if(e.entity.ens_name)return e.entity.ens_name;const t=e.entity.wallet_address;return`${t.substring(0,6)}...${t.substring(t.length-4)}`}),m=()=>{n.logout(),o.push({name:"landing",query:{redir:window.location.href}})},d=e=>new URL({"../assets/base.css":Q,"../assets/logo.png":X,"../assets/logo.svg":Y,"../assets/search-icon.svg":Z}[`../assets/${e}`],self.location).href;return(e,t)=>{const p=c("el-image"),h=c("el-button"),l=c("el-tab-pane"),x=c("el-tabs");return i(),y("div",ee,[s(v)!="xs"?(i(),E(p,{key:0,src:d("logo.png"),style:{width:"43px",height:"43px","margin-right":"2em"}},null,8,["src"])):$("",!0),s(o).currentRoute.value.name=="qr-scan"?(i(),y(P,{key:1},[te,r(h,{icon:"close",onClick:t[0]||(t[0]=k=>s(o).push("plaque-list"))},{default:u(()=>[oe]),_:1})],64)):(i(),y(P,{key:2},[r(x,{modelValue:s(g).name,"onUpdate:modelValue":t[1]||(t[1]=k=>s(g).name=k),onTabClick:f},{default:u(()=>[r(l,{label:"Plaques",name:"plaque-list"}),r(l,{label:"Tokens",name:"token-list"})]),_:1},8,["modelValue"]),ae,s(v)!="xs"?(i(),y("div",se,z(s(w)),1)):$("",!0),r(h,{onClick:m,style:{"margin-left":"1em"}},{default:u(()=>[re]),_:1})],64))])}}});const le=T({__name:"HomeView",setup(B){const o=A(),g=O(),n=W(),D=j(),v=N(),f=U(!1),w=L();return F(async()=>{const m=G.service({lock:!0,text:"Loading",background:"rgba(0, 0, 0, 0.7)"}),{wallet_address:d,signature:e,ens_name:t}=o.getCachedAccountData();if(!d||!e){v.push({name:"landing",query:{redir:window.location.href}}),m.close();return}const p=o.loadAccount(d,e,t),h=D.loadGalleryList(d);if(await Promise.all([p,h]),o.account==null){_("Error - failed to load account");return}const l=o.get_account.entity.wallet_address,x=o.is_guest,k=g.loadPlaques(l).catch(a=>_(`Error loading plaques - ${a}`));let q,V,C;x?(C=n.loadDemoTokens(),q=Promise.resolve(),V=Promise.resolve()):(q=n.loadOpenseaWalletTokenMetas(l).catch(a=>_(`Error loading opensea wallet tokens - ${a}`)),V=n.loadOpenseaMintedTokenMetas(l).catch(a=>_(`Error loading opensea minted tokens - ${a}`)),C=n.loadArchiveTokenMetas(l).catch(a=>_(`Error loading archive token metas - ${a}`))),await Promise.all([k,C,V]),await q;const b=w.query.plaque_id;b&&typeof b=="string"&&!g.plaque_map[b]&&await J(b,{wallet_address:o.get_account.entity.wallet_address,token_meta_id_list:[]}).catch(a=>{_(`Error adding plaque from query param = ${a}`)}),f.value=!0,m.close()}),(m,d)=>{const e=c("el-header"),t=c("el-main"),p=c("el-container");return i(),E(p,{style:{height:"100%"}},{default:u(()=>[r(e,{class:"header"},{default:u(()=>[r(ne)]),_:1}),r(t,{style:{"background-color":"#DAD9D7"}},{default:u(()=>[f.value?(i(),E(s(I),{key:0})):$("",!0)]),_:1})]),_:1})}}});var me=H(le,[["__scopeId","data-v-0f59a73c"]]);export{me as default};

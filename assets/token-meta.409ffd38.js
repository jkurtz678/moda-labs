import{q as f}from"./index.7f9e6b8d.js";import{U as y,D as w,f as T,R as r,K as _,Q as m,n as E,x as v,T as M,d as h,A as g,B as A,a as d,u as L,b as B,c as O,e as b}from"./account.e1669891.js";const k=y(T),i=w(k,"token-meta"),K=async t=>{const e=await g(i,{...A.createBaseEntity(),...t}),a=await h(e);return{id:e.id,entity:a.data()}},P=async(t,e)=>{const a=v(k,"token-meta",t);await M(a,e);const s=await h(a);return{id:s.id,entity:s.data()}},x=async t=>{await r(_(i),e=>{const a=[];e.forEach(s=>{a.push({id:s.id,entity:s.data()})}),t(a)})},C=async(t,e)=>{const a=_(i,m("wallet_address","==",t));await r(a,s=>{const n=[];s.forEach(o=>{n.push({id:o.id,entity:o.data()})}),e(n)})},I=async(t,e)=>{if(t.length==0)return;const a=_(i,m(E(),"in",t));await r(a,s=>{const n=[];s.forEach(o=>{n.push({id:o.id,entity:o.data()})}),e(n)})},u="742ea11e1d864fe2b23ac7cfe66a43f7";async function D(t){const e=await fetch(`https://api.opensea.io/api/v1/assets/?owner=${t}`,{headers:{"X-API-KEY":u}}),a=await e.json();return p(e,a),a.assets}const S=async t=>{const e=[];let a="";for(;;){const s=await fetch(`https://api.opensea.io/api/v1/events?account_address=${t}&event_type=created&limit=50${a?"&cursor="+a:""}`,{headers:{"X-API-KEY":u}}),n=await s.json();if(p(s,n),n.asset_events&&e.push(...n.asset_events.map(o=>({...o.asset,creator:o.from_account}))),a=n.next,!a)break}return e},p=(t,e)=>{if(t.status>=400)throw e.detail?e.detail:t.status==429?"Error - opensea rejected request due to rate limiting":"Error loading opensea tokens"},W=f({id:"token-meta",state:()=>({archive_token_meta_list:[],opensea_minted_token_meta_list:[],opensea_wallet_token_meta_list:[]}),getters:{archive_token_meta_map:t=>{const e={};return t.archive_token_meta_list.forEach(a=>{e[a.id]=a}),e},all_token_metas(t){const e={};return[...t.opensea_minted_token_meta_list,...t.opensea_wallet_token_meta_list].forEach(s=>{const n=U(s);e[n.id]=n}),t.archive_token_meta_list.forEach(s=>{e[d(s)]&&delete e[d(s)],e[s.id]=s}),e},sorted_all_token_metas(t){return JSON.parse(JSON.stringify(Object.values(this.all_token_metas))).sort((a,s)=>{var c,l;const n=((c=a.entity.artist)==null?void 0:c.toLowerCase())+a.entity.name.toLowerCase(),o=((l=s.entity.artist)==null?void 0:l.toLowerCase())+s.entity.name.toLowerCase();return n<o?-1:n>o?1:0})}},actions:{async loadArchiveTokenMetas(t){if(L().is_wallet_address_admin){await x(a=>{this.archive_token_meta_list=a.filter(s=>s.entity.external_media_url||s.entity.media_id)});return}await C(t,a=>{this.archive_token_meta_list=a})},async loadOpenseaMintedTokenMetas(t){await S(t).then(e=>{this.opensea_minted_token_meta_list=e})},async loadOpenseaWalletTokenMetas(t){await D(t).then(e=>{this.opensea_wallet_token_meta_list=e})},async loadDemoTokens(){await I(["I3h1A70LYU2LBF6DHJMP","I0Th1mBUBCXYHa27g6na","CUzOrMmnsyMSUKy7ST7M"],e=>{this.archive_token_meta_list=e})}}}),U=t=>{var e,a;return{id:B(t),entity:{name:t.name,artist:((a=(e=t.creator)==null?void 0:e.user)==null?void 0:a.username)||"N/A",description:t.description,public_link:t.permalink,blockchain:O.Ethereum,asset_contract_address:t.asset_contract.address,token_id:t.token_id,platform:b.Opensea,external_thumbnail_url:t.image_thumbnail_url,external_media_url:t.animation_url?t.animation_url:t.image_url}}};export{P as a,K as c,W as u};

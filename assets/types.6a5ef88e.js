import{g as s,d as o,e as c,n as i}from"./firebaseConfig.d7a6b5a9.js";class h{static createBaseEntity(){const t=i.now();return{created_at:t,updated_at:t}}static updateBaseEntity(){return{updated_at:i.now()}}}var u=(e=>(e.Ethereum="ethereum",e.OffChain="off_chain",e))(u||{}),l=(e=>(e.Archive="archive",e.Opensea="opensea",e.OpenseaArchive="opensea_archive",e))(l||{});function d(e){return`${e.asset_contract.address}/${e.token_id}`}function f(e){return`${e.entity.asset_contract_address}/${e.entity.token_id}`}function m(e){switch(e){case"opensea":return"Opensea";case"opensea_archive":return"Opensea Archive";default:return"Archive"}}async function p(e){const t=s(),n=o(t,`thumb_${e.entity.media_id}.jpg`);try{const a=await c(n);return console.log(`getTokenMetaThumbnailImageURL - found url for image ${e.entity.name}`,a),a}catch(a){console.log(`getTokenMetaThumbnailImageURL - failed to find archive thumbnail image ${e.entity.name}`,a)}return e.entity.external_thumbnail_url?e.entity.external_thumbnail_url:new URL("/assets/logo.61e654f6.png",self.location).href}async function y(e){console.log("token_meta",e);const t=s(),n=`${e.entity.media_id}${e.entity.media_type}`;console.log("path",n);const a=o(t,n);try{const r=await c(a);return console.log(`getTokenMetaThumbnailImageURL - found url for image ${e.entity.name}`,r),r}catch(r){console.log(`getTokenMetaThumbnailImageURL - failed to find archive thumbnail image ${e.entity.name}`,r)}return""}export{h as B,l as T,d as a,u as b,m as c,y as d,p as e,f as g};

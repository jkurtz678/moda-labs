import{p as f}from"./index.244824b9.js";import{B as y,g as l,a as w,b as g,T as E}from"./types.01590581.js";import{L as T,e as v,f as M,I as m,M as r,$ as d,n as L,d as b,b as A,g as I,c as u,p as O}from"./firebaseConfig.bef60b65.js";import{u as B}from"./account.2e0e4398.js";const h=T(M),i=v(h,"token-meta"),U=async t=>{const e=await O(i,{...y.createBaseEntity(),...t}),a=await u(e);return{id:e.id,entity:a.data()}},W=async(t,e)=>{const a=A(h,"token-meta",t);await I(a,e);const s=await u(a);return{id:s.id,entity:s.data()}},x=async t=>{await m(r(i),e=>{const a=[];e.forEach(s=>{a.push({id:s.id,entity:s.data()})}),t(a)})},C=async(t,e)=>{const a=r(i,d("user_id","==",t));await m(a,s=>{const n=[];s.forEach(o=>{n.push({id:o.id,entity:o.data()})}),e(n)})},j=async t=>{if(t.length==0)return[];const e=r(i,d(L(),"in",t)),a=await b(e),s=[];return a.forEach(n=>{s.push({id:n.id,entity:n.data()})}),s},k="742ea11e1d864fe2b23ac7cfe66a43f7";async function q(t){const e=await fetch(`https://api.opensea.io/api/v1/assets/?owner=${t}`,{headers:{"X-API-KEY":k}}),a=await e.json();return p(e,a),a.assets}const S=async t=>{const e=[];let a="";for(;;){const s=await fetch(`https://api.opensea.io/api/v1/events?account_address=${t}&event_type=created&limit=50${a?"&cursor="+a:""}`,{headers:{"X-API-KEY":k}}),n=await s.json();if(p(s,n),n.asset_events&&e.push(...n.asset_events.map(o=>({...o.asset,creator:o.from_account}))),a=n.next,!a)break}return e},p=(t,e)=>{if(t.status>=400)throw e.detail?e.detail:t.status==429?"Error - opensea rejected request due to rate limiting":"Error loading opensea tokens"},Y=f({id:"token-meta",state:()=>({archive_token_meta_list:[],opensea_minted_token_meta_list:[],opensea_wallet_token_meta_list:[],gallery_token_meta_list:[]}),getters:{archive_token_meta_map:t=>{const e={};return t.archive_token_meta_list.forEach(a=>{e[a.id]=a}),e},all_token_metas(t){const e={};return[...t.opensea_minted_token_meta_list,...t.opensea_wallet_token_meta_list].forEach(s=>{const n=D(s);e[n.id]=n}),t.archive_token_meta_list.forEach(s=>{e[l(s)]&&delete e[l(s)],e[s.id]=s}),t.gallery_token_meta_list.forEach(s=>{e[s.id]=s}),e},sorted_all_token_metas(t){return JSON.parse(JSON.stringify(Object.values(this.all_token_metas))).sort((a,s)=>{var _,c;const n=((_=a.entity.artist)==null?void 0:_.toLowerCase())+a.entity.name.toLowerCase(),o=((c=s.entity.artist)==null?void 0:c.toLowerCase())+s.entity.name.toLowerCase();return n<o?-1:n>o?1:0})}},actions:{async loadArchiveTokenMetas(t){if(B().is_user_id_admin){await x(a=>{this.archive_token_meta_list=a.filter(s=>s.entity.external_media_url||s.entity.media_id)});return}await C(t,a=>{this.archive_token_meta_list=a})},async loadOpenseaMintedTokenMetas(t){await S(t).then(e=>{this.opensea_minted_token_meta_list=e})},async loadOpenseaWalletTokenMetas(t){await q(t).then(e=>{this.opensea_wallet_token_meta_list=e})},async loadGalleryTokenMetas(t){const e=[];t.forEach(s=>{e.push(...s.entity.token_meta_id_list)});const a=[];for(let s=0;s<e.length;s+=10){const n=await j(e.slice(s,s+10));a.push(...n)}this.gallery_token_meta_list=a}}}),D=t=>{var e,a;return{id:w(t),entity:{name:t.name,artist:((a=(e=t.creator)==null?void 0:e.user)==null?void 0:a.username)||"N/A",description:t.description,public_link:t.permalink,blockchain:g.Ethereum,asset_contract_address:t.asset_contract.address,token_id:t.token_id,platform:E.Opensea,external_thumbnail_url:t.image_thumbnail_url,external_media_url:t.animation_url?t.animation_url:t.image_url}}};export{W as a,U as c,Y as u};
